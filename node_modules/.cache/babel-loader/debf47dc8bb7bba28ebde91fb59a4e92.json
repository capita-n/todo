{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/User/Documents/nath/mytodo/todo/components/TodoForm.js\";\nimport React from \"react\";\nimport List from '../components/TodoList';\n\nvar TodoForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoForm, _React$Component);\n\n  function TodoForm(props) {\n    var _this;\n\n    _classCallCheck(this, TodoForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoForm).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (event) {\n      _this.setState({\n        term: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateTodo\", function (data) {\n      _this.setState({\n        items: _toConsumableArray(data)\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function (event) {\n      event.preventDefault();\n\n      if (_this.state.term) {\n        _this.setState({\n          term: '',\n          items: [].concat(_toConsumableArray(_this.state.items), [_this.state.term])\n        });\n      }\n    });\n\n    _this.state = {\n      term: '',\n      items: []\n    };\n    return _this;\n  }\n\n  _createClass(TodoForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Todo List App\")), React.createElement(\"form\", {\n        className: \"\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.term,\n        onChange: this.onChange,\n        type: \"text\",\n        placeholder: \"Add a todo list...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Add\")), React.createElement(List, {\n        items: this.state.items,\n        updateTodo: this.updateTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodoForm;\n}(React.Component);\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/User/Documents/nath/mytodo/todo/components/TodoForm.js"],"names":["List","TodoForm","props","event","setState","term","target","value","data","items","preventDefault","state","onSubmit","onChange","updateTodo","React","Component"],"mappings":";;;;;;;;;;AACA,OAAOA,IAAP,MAAiB,wBAAjB;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,+DAQR,UAACC,KAAD,EAAW;AACpB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAArB,OAAd;AACF,KAVmB;;AAAA,iEAYP,UAACC,IAAD,EAAU;AACtB,YAAKJ,QAAL,CAAc;AACVK,QAAAA,KAAK,qBAAMD,IAAN;AADK,OAAd;AAGA,KAhBmB;;AAAA,+DAkBR,UAACL,KAAD,EAAW;AACpBA,MAAAA,KAAK,CAACO,cAAN;;AACF,UAAI,MAAKC,KAAL,CAAWN,IAAf,EAAqB;AACrB,cAAKD,QAAL,CAAc;AACVC,UAAAA,IAAI,EAAE,EADI;AAEVI,UAAAA,KAAK,+BAAM,MAAKE,KAAL,CAAWF,KAAjB,IAAwB,MAAKE,KAAL,CAAWN,IAAnC;AAFK,SAAd;AAIA;AACC,KA1BkB;;AAEjB,UAAKM,KAAL,GAAa;AACXN,MAAAA,IAAI,EAAE,EADK;AAEXI,MAAAA,KAAK,EAAE;AAFI,KAAb;AAFiB;AAMlB;;;;6BAsBQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA5B,CADA,EAEE;AAAM,QAAA,SAAS,EAAC,EAAhB;AAAmB,QAAA,QAAQ,EAAE,KAAKG,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWN,IAAzB;AAA+B,QAAA,QAAQ,EAAE,KAAKQ,QAA9C;AAAwD,QAAA,IAAI,EAAC,MAA7D;AAAoE,QAAA,WAAW,EAAC,oBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CAFF,EAME,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWF,KAAxB;AAA+B,QAAA,UAAU,EAAE,KAAKK,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD;;;;EAxCoBC,KAAK,CAACC,S;;AA2C7B,eAAef,QAAf","sourcesContent":["\nimport List from '../components/TodoList';\n\nclass TodoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: '',\n      items: []\n    };\n  }\n\n  onChange = (event) => {\n    this.setState({ term: event.target.value });\n\t}\n\t\n\tupdateTodo = (data) => {\n\t\tthis.setState({\n      items: [...data]\n    });\n\t}\n\n  onSubmit = (event) => {\n    event.preventDefault();\n  if (this.state.term) {\n\t\tthis.setState({\n      term: '',\n      items: [...this.state.items, this.state.term]\n    });\n\t}\n  }\n  \n  render() {\n    return (\n      <div className=\"\">\n      <div className=\"card-title\"><h2>Todo List App</h2></div>\n        <form className=\"\" onSubmit={this.onSubmit}>\n          <input value={this.state.term} onChange={this.onChange} type=\"text\" placeholder=\"Add a todo list...\" />\n          <button>Add</button>\n        </form>\n        <List items={this.state.items} updateTodo={this.updateTodo} /> \n      </div>\n    );\n  }\n}\n\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}